#
# =============== Managed by SONiC Package Manager. DO NOT EDIT! ===============
#             auto-generated from {{ source }} by sonic-package-manager
#
{%- set path = '/usr/local/bin' %}
{%- set multi_instance = multi_instance|default(False) %}
{%- set multi_instance_services = multi_instance_services|default([]) %}
[Unit]
Description={{ manifest.service.name }} container
{%- for service in manifest.service.requires %}
Requires={{ service }}{% if multi_instance and service in multi_instance_services %}@%i{% endif %}.service
{%- endfor %}
{%- for service in manifest.service.requisite %}
Requisite={{ service }}{% if multi_instance and service in multi_instance_services %}@%i{% endif %}.service
{%- endfor %}
{%- for service in manifest.service.after %}
After={{ service }}{% if multi_instance and service in multi_instance_services %}@%i{% endif %}.service
{%- endfor %}
{%- for service in manifest.service.before %}
Before={{ service }}{% if multi_instance and service in multi_instance_services %}@%i{% endif %}.service
{%- endfor %}
BindsTo=sonic.target
After=sonic.target
StartLimitIntervalSec=1200
StartLimitBurst=3

[Service]
ExecStartPre={{path}}/{{manifest.service.name}}.sh start{% if multi_instance %} %i{% endif %}
ExecStart={{path}}/{{manifest.service.name}}.sh wait{% if multi_instance %} %i{% endif %}
ExecStop={{path}}/{{manifest.service.name}}.sh stop{% if multi_instance %} %i{% endif %}
RestartSec=30

{%- if not manifest.service.delayed %}
[Install]
WantedBy=sonic.target
{%- for service in manifest.service["wanted-by"] %}
WantedBy={{ service }}{% if multi_instance and service in multi_instance_services %}@%i{% endif %}.service
{%- endfor %}
{%- endif %}
