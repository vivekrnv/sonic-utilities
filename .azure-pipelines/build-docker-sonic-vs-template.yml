parameters:
- name: timeout
  type: number
  default: 60

- name: artifact_name
  type: string

jobs:
- job:
  displayName: "docker-sonic-vs"
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: wheels
    displayName: "Download sonic utilities artifact"

  - task: DownloadPipelineArtifact@2
    inputs:
      source: specific
      project: build
      pipeline: 15
      artifact: ${{ parameters.artifact_name }}
      runVersion: 'latestFromBranch'
      runBranch: 'refs/heads/master'
    displayName: "Download docker-sonic-vs artifact"

  - script: |
      set -ex

      echo $(Build.DefinitionName).$(Build.BuildNumber)

      docker load < ../docker-sonic-vs.gz

      docker images "docker-sonic-vs"

      image_id=$(docker images "docker-sonic-vs:Azure.sonic-swss*" -q)

      docker tag ${image_id} docker-sonic-vs:latest

      docker images "docker-sonic-vs"

      mkdir -p .azure-pipelines/docker-sonic-vs/wheels

      cp -v ../*.whl .azure-pipelines/docker-sonic-vs/wheels

      pushd .azure-pipelines

      docker build --no-cache -t docker-sonic-vs:$(Build.DefinitionName).$(Build.BuildNumber) docker-sonic-vs

      popd

      docker save docker-sonic-vs:$(Build.DefinitionName).$(Build.BuildNumber) | gzip -c > $(Build.ArtifactStagingDirectory)/docker-sonic-vs.gz
    displayName: "Build docker-sonic-vs image"

  - publish: $(Build.ArtifactStagingDirectory)/
    artifact: ${{ parameters.artifact_name }}
    displayName: "Archive sonic docker vs image"
